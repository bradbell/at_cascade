-----------------------------------------------------------------------------
at_cascade: Cascading Dismod_at Analysis From Parent To Child Regions
          Copyright (C) 2021-21 University of Washington
             (Bradley M. Bell bradbell@uw.edu)

This program is distributed under the terms of the
    GNU Affero General Public License version 3.0 or later
see http://www.gnu.org/licenses/agpl.txt
-----------------------------------------------------------------------------
{xsrst_begin_parent all_node_db}

The All Node DataBase
#####################
This data base contains information for all the nodes between the
:ref:`glossary.root_node` and the :ref:`glossary.leaf_node_set`.

{xsrst_end all_node_db}
------------------------------------------------------------------------------
{xsrst_begin all_cov_reference_table}

All Node Covariate Reference Table
##################################
This table specifies the reference value for every covariate
and node in the *root_node_database*.
It has the following columns:

all_cov_reference_id
********************
This column has type ``integer`` and is the primary key for this table.
Its initial value is zero and it increments by one for each row.

node_id
*******
This column has type ``integer`` and is specifies
the node for this reference
by the primary key in the *root_node_database* node table

covariate_id
************
This column has type ``integer`` and is specifies
the covariate, for this reference,
by the primary key in the *root_node_database* covariate table

reference
*********
This column has type ``real`` and it specifies the reference value
for this covariate and node.

{xsrst_end all_cov_reference_table}
------------------------------------------------------------------------------
{xsrst_begin leaf_node_table}

All Node Leaf Node Table
########################
This table specifies the :ref:`glossary.leaf_node_set`.
It the following columns:

leaf_node_id
************
This column has type ``integer`` and is the primary key for this table.
Its initial value is zero and it increments by one for each row.

node_id
*******
This column has type ``integer`` and is specifies
a node by the primary key in the *root_node_database* node table

{xsrst_end leaf_node_table}
------------------------------------------------------------------------------
{xsrst_begin omega_grid}

Omega Grid
##########
The :ref:`glossary.omega` grid is specified by the
omega_age_grid and omega_time_grid tables.

omega_age_grid Table
********************
This table has two columns, *omega_age_grid_id* and *age_id*:

omega_age_grid_id
=================
This column has type ``integer`` and is the primary key for this table.
Its initial value is zero and it increments by one for each row.

age_id
======
This column has type ``integer`` and specifies the age grid points
by their index in the *root_node_database* age table.
This column is monotone increasing with *omega_age_grid_id*.

omega_time_grid Table
*********************
This table has two columns, *omega_time_grid_id* and *time_id*:

omega_time_grid_id
==================
This column has type ``integer`` and is the primary key for this table.
Its initial value is zero and it increments by one for each row.

time_id
=======
This column has type ``integer`` and specifies the time grid points
by their index in the *root_node_database* time table.
This column is monotone increasing with *omega_time_grid_id*.


{xsrst_end omega_grid}
------------------------------------------------------------------------------
{xsrst_begin mtall_table}

All Node mtall Table
####################
This table specifies the value of :ref:`glossary.mtall` for each
age, time point in the :ref:`omega_grid` and every node.

mtall_id
********
This column has type ``integer`` and is the primary key for this table.
Its initial value is zero and it increments by one for each row.

node_id
*******
This column has type ``integer`` and specifies a node by its *node_id*
value in the *root_node_database* node table.
If a particular *node_id* does not appear,
*omega* is set to zero for that node.
If a *node_id* does appear, there must be one and only one row
that has that *node_id* and each possible combination of
*omega_age_id*, *omega_time_id*.

omega_age_id
************
This column has type ``integer`` and specifies the age for a grid point
by the corresponding *omega_age_id* in the
:ref:`omega_grid.omega_age_table`.

omega_time_id
*************
This column has type ``integer`` and specifies the time for a grid point
by the corresponding *omega_time_id* in the
:ref:`omega_grid.omega_time_table`.

mtall_value
***********
This column has type ``real`` and is the value of *mtall*
at the corresponding node, age, and time.



{xsrst_end mtall_table}
------------------------------------------------------------------------------
{xsrst_begin mtspecific_table}

All Node mtspecific Table
#########################
This table specifies the value of :ref:`glossary.mtspecific` for each
age, time point in the :ref:`omega_grid` and every node.

mtspecific_id
*************
This column has type ``integer`` and is the primary key for this table.
Its initial value is zero and it increments by one for each row.

node_id
*******
This column has type ``integer`` and specifies a node by its *node_id*
value in the *root_node_database* node table.
If a particular *node_id* does not appear,
*omega* is set to *mtall* for that node.
If a *node_id* does appear, there must be one and only one row
that has that *node_id* and each possible combination of
*omega_age_id*, *omega_time_id*.
In this case *omega* for the node is set to *mtall - mtspecific*.

omega_age_id
************
This column has type ``integer`` and specifies the age for a grid point
by the corresponding *omega_age_id* in the
:ref:`omega_grid.omega_age_table`.

omega_time_id
*************
This column has type ``integer`` and specifies the time for a grid point
by the corresponding *omega_time_id* in the
:ref:`omega_grid.omega_time_table`.

mtspecific_value
****************
This column has type ``real`` and is the value of *mtspecific*
at the corresponding node, age, and time.

{xsrst_end   mtspecific_table}
------------------------------------------------------------------------------
{xsrst_begin option_table}

All Node Option Table
#####################
This table specifies certain at_cascade options

Table Format
************

option_id
=========
This column of the option table has type ``integer`` and is the primary key.
Its initial value is zero and it increments by one for each row.

option_name
===========
This column of the option table has type ``text``.
It specifies a name that is attached to each option value.

option_value
============
This column of the option table has type ``text``.
It specifies a value that is attached to each option name.

sex_level
*********
If this *option_name* appears, the corresponding *option_value*
is not yet specified.
Otherwise, there will be no sex split in this cascade.

in_parallel
***********
If this *option_name* appears, the corresponding *option_value*
is not yet specified.
Otherwise, the cascade will be run sequentially.

min_interval
************
If this *option_name* appears, the corresponding *option_value*
is not yet specified.
Otherwise, all age and time averages will
approximated by the value at the midpoint of the intervals.

{xsrst_end option_table}
