-----------------------------------------------------------------------------
at_cascade: Cascading Dismod_at Analysis From Parent To Child Regions
          Copyright (C) 2021-21 University of Washington
             (Bradley M. Bell bradbell@uw.edu)

This program is distributed under the terms of the
    GNU Affero General Public License version 3.0 or later
see http://www.gnu.org/licenses/agpl.txt
-----------------------------------------------------------------------------
{xsrst_begin_parent all_node_db}

The All Node DataBase
#####################
This data base contains information for all the nodes between the
:ref:`glossary.root_node` and the :ref:`glossary.leaf_node_set`.

{xsrst_end all_node_db}
------------------------------------------------------------------------------
{xsrst_begin all_cov_reference_table}

All Node Covariate Reference Table
##################################
This table specifies the reference value for every covariate
and node in the *root_node_database*.
It has the following columns:

all_cov_reference_id
********************
This column has type ``integer`` and is the primary key for this table.
Its initial value is zero and it increments by one for each row.

node_id
*******
This column has type ``integer`` and is specifies
the node for this reference
by the primary key in the *root_node_database* node table

covariate_id
************
This column has type ``integer`` and is specifies
the covariate, for this reference,
by the primary key in the *root_node_database* covariate table

reference
*********
This column has type ``real`` and it specifies the reference value
for this covariate and node.

{xsrst_end all_cov_reference_table}
------------------------------------------------------------------------------
{xsrst_begin leaf_node_table}

Leaf Node Table
###############
This table specifies the :ref:`glossary.leaf_node_set`.
If it is empty, all of the descendants of the *root_node* are fit.
Otherwise, only the nodes in the leaf node set,
and their ancestors up to the *root_node* are fit.
This table has the following columns:

leaf_node_id
************
This column has type ``integer`` and is the primary key for this table.
Its initial value is zero and it increments by one for each row.

node_id
*******
This column has type ``integer`` and is specifies
a node by the primary key in the *root_node_database* node table

{xsrst_end leaf_node_table}
------------------------------------------------------------------------------
{xsrst_begin omega_grid}

Omega Grid
##########
The :ref:`glossary.omega` grid is specified by the
omega_age_grid and omega_time_grid tables.

omega_age_grid Table
********************
This table has two columns, *omega_age_grid_id* and *age_id*:

n_omega_age
===========
We use the notation *n_omega_age* for the number of values in this table.

omega_age_grid_id
=================
This column has type ``integer`` and is the primary key for this table.
Its initial value is zero and it increments by one for each row.

age_id
======
This column has type ``integer`` and specifies the age grid points
by their index in the *root_node_database* age table.
This column is monotone increasing with *omega_age_grid_id*.

omega_time_grid Table
*********************
This table has two columns, *omega_time_grid_id* and *time_id*:

n_omega_time
============
We use the notation *n_omega_time* for the number of values in this table.

omega_time_grid_id
==================
This column has type ``integer`` and is the primary key for this table.
Its initial value is zero and it increments by one for each row.

time_id
=======
This column has type ``integer`` and specifies the time grid points
by their index in the *root_node_database* time table.
This column is monotone increasing with *omega_time_grid_id*.

{xsrst_end omega_grid}
------------------------------------------------------------------------------
{xsrst_begin all_mtall}

All Node mtall Values
#####################
The values of :ref:`glossary.mtall` for all the nodes is specified by the
all_mtall and mtall_index tables.

all_mtall Table
***************
This table specifies the value of :ref:`glossary.mtall` for each
age, time point in the :ref:`omega_grid` and every node.
If *mtall* is not specified for a node, it will use the same *mtall*
values as its nearest ancestor node.
If non of its ancestors have *mtall* values,
there is no *mtall* data for this node and its omega will be constrained
to zero.

all_mtall_id
============
This column has type ``integer`` and is the primary key for this table.
Its initial value is zero and it increments by one for each row.

all_mtall_value
===============
This column has type ``real`` and is the value of *mtall*
for a specific node, age, and time; see mtall_index table below.

mtall_index Table
*****************
This table specifies the all_mtall_id at which the mtall values
for a particular node begin.
In addition, specifications for which age and time points
correspond to each all_mtall_id are included.

mtall_index_id
==============
This column has type ``integer`` and is the primary key for this table.
Its initial value is zero and it increments by one for each row.

node_id
=======
This column has type ``integer`` and specifies a node by its index
in the root node database node table.

all_mtall_id
============
This column has type ``integer`` and specifies the index in the
all_mtall table where the mtall values for this node begin.
For *i* equal 0 through
:ref:`n_omega_age-1<omega_grid.omega_age_grid_table.n_omega_age>`
and *j* equal 0 through
:ref:`n_omega_time-1<omega_grid.omega_time_grid_table.n_omega_time>` ::

    all_mtall_id + i * n_omega_time + j

is the index in the all_mtall table of the value for this node,
the *i*-th age in the omega_grid,
and the *j*-th time in the omega_grid.

{xsrst_end all_mtall}
------------------------------------------------------------------------------
{xsrst_begin all_mtspecific}

All Node mtspecific Values
##########################
The values of :ref:`glossary.mtspecific` for all the nodes is specified by the
all_mtspecific and mtspecific_index tables.

all_mtspecific Table
********************
This table specifies the value of :ref:`glossary.mtspecific` for each
age, time point in the :ref:`omega_grid` and every node.
If *mtspecific* is not specified for a node, it will use the same *mtspecific*
values as its nearest ancestor node.
If non of its ancestors have *mtspecific* values,
there is no *mtspecific* data for this node and its omega will be constrained
to be equal to its *mtall* data.

all_mtspecific_id
=================
This column has type ``integer`` and is the primary key for this table.
Its initial value is zero and it increments by one for each row.

all_mtspecific_value
====================
This column has type ``real`` and is the value of *mtspecific*
for a specific node, age, and time; see mtspecific_index table below.

mtspecific_index Table
**********************
This table specifies the all_mtspecific_id at which the mtspecific values
for a particular node begin.
In addition, specifications for which age and time points
correspond to each all_mtspecific_id are included.

mtspecific_index_id
===================
This column has type ``integer`` and is the primary key for this table.
Its initial value is zero and it increments by one for each row.

node_id
=======
This column has type ``integer`` and specifies a node by its index
in the root node database node table.

all_mtspecific_id
=================
This column has type ``integer`` and specifies the index in the
all_mtspecific table where the mtspecific values for this node begin.
For *i* equal 0 through
:ref:`n_omega_age-1<omega_grid.omega_age_grid_table.n_omega_age>`
and *j* equal 0 through
:ref:`n_omega_time-1<omega_grid.omega_time_grid_table.n_omega_time>`

| all_mtspecific_id + i * n_omega_time + j

Is the index in the all_mtspecific table of the value for this node,
the *i*-th age in the omega_grid,
and the *j*-th time in the omega_grid.

{xsrst_end all_mtspecific}
------------------------------------------------------------------------------
{xsrst_begin all_option_table}

All Node Option Table
#####################
This table specifies certain at_cascade options

Table Format
************

all_option_id
=============
This column of the option table has type ``integer`` and is the primary key.
Its initial value is zero and it increments by one for each row.

option_name
===========
This column of the option table has type ``text``.
It specifies a name that is attached to each option value.

option_value
============
This column of the option table has type ``text``.
It specifies a value that is attached to each option name.

sex_level
*********
If this *option_name* appears, the corresponding *option_value*
is not yet specified.
Otherwise, there will be no sex split in this cascade.

in_parallel
***********
If this *option_name* appears, the corresponding *option_value*
is not yet specified.
Otherwise, the cascade will be run sequentially.

min_interval
************
If this *option_name* appears, the corresponding *option_value*
is not yet specified.
Otherwise, all age and time averages will
approximated by the value at the midpoint of the intervals.

{xsrst_end all_option_table}
------------------------------------------------------------------------------
